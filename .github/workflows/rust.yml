name: Rust Release

on:
  push:
    branches:
      - master
    tags:
      - '**'

permissions:
  contents: write

jobs:
  release:
    name: Release - ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: rclone-precache
            cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: rclone-precache
            cross: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install cross-compilation tools
        if: matrix.platform.cross
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Prepare artifacts
        run: |
          mkdir -p dist
          if [ "${{ matrix.platform.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary_name }}.exe dist/
          else
            cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary_name }} dist/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ matrix.platform.binary_name }}-${{ matrix.platform.target }}
          path: dist/*
          retention-days: 1